
#服务名
spring.application.name = auth_my
#端口
server.port = 40400
server.servlet.context-path=/auth

#DB Configuration:
spring.datasource.druid.driverClassName=com.mysql.jdbc.Driver
spring.datasource.druid.url=jdbc:mysql://192.168.106.129:3306/xc_user?characterEncoding=utf8&useSSL=false&serverTimezone = GMT
spring.datasource.druid.username=root
spring.datasource.druid.password=123456
#初始建立连接数量
spring.datasource.druid.initialSize=5
#最小连接数量
spring.datasource.druid.minIdle=5
#最大连接数量
spring.datasource.druid.maxActive=20
#获取连接最大等待时间，毫秒
spring.datasource.druid.maxWait=10000
#申请连接时检测连接是否有效
spring.datasource.druid.testOnBorrow=true
#归还连接时检测连接是否有效
spring.datasource.druid.testOnReturn=false
#配置间隔检测连接是否有效的时间（单位是毫秒）
spring.datasource.druid.timeBetweenEvictionRunsMillis=60000
#连接在连接池的最小生存时间（毫秒）
spring.datasource.druid.minEvictableIdleTimeMillis=300000

#服务注册，是否将自己注册到Eureka服务中
eureka.client.register-with-eureka=true
#服务发现，是否从Eureka中获取注册信息
eureka.client.fetch-registry=true
#Eureka客户端与Eureka服务端的交互地址，高可用状态配置对方的地址，单机状态配置自己（如果不配置则默认本机8761端口）
eureka.client.service-url.defaultZone=http://localhost:50101/eureka/
#将自己的ip地址注册到Eureka服务中
eureka.instance.prefer-ip-address=true
eureka.instance.ip-address=127.0.0.1
eureka.instance.instance-id=eureka-provider-auth_my:40400

#redisson配置
spring.redis.redisson.config=classpath:redisson.yml

#token存储到redis的过期时间
auth.tokenValiditySeconds=1200
auth.clientId=XcWebApp
auth.clientSecret=XcWebApp
auth.cookieDomain=xuecheng.com
auth.cookieMaxAge=-1

encrypt.key-store.location=classpath:/xc.keystore
encrypt.key-store.secret=xuechengkeystore
encrypt.key-store.alias=xckey
encrypt.key-store.password=xuecheng

ribbon.MaxAutoRetries=2 #最大重试次数，当Eureka中可以找到服务，但是服务连不上时将会重试，如果eureka中找不到服务则直接走断路器
ribbon.MaxAutoRetriesNextServer=3 #切换实例的重试次数
ribbon.OkToRetryOnAllOperations=false  #对所有操作请求都进行重试，如果是get则可以，如果是post，put等操作没有实现幂等的情况下是很危险的,所以设置为false
ribbon.ConnectTimeout=5000  #请求连接的超时时间
ribbon.ReadTimeout=6000 #请求处理的超时时间